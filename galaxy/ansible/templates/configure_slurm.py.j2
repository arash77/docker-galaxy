from socket import gethostname
from os import environ
import subprocess

CONFIG_FILE_PATH = "/etc/slurm/slurm.conf"

def main():
    slurm_status = subprocess.check_output(['slurmd', '-C']).decode('utf-8')
    dict_status = dict(z.split('=') for z in slurm_status.split())
    cpus = dict_status['CPUs']
    memory = dict_status['RealMemory']
    mem_per_cpu = int(int(memory) / int(cpus))

    # Define variables based on environment or default values
    hostname = gethostname()
    template_params = {
        "SlurmctldHost": environ.get('SLURMCTLD_HOST', hostname),
        "ClusterName": environ.get('SLURM_CLUSTER_NAME', 'cluster'),
        "SlurmUser": environ.get('SLURM_USER_NAME', '{{ galaxy_user_name }}'),
    }

    # Construct NodeName and PartitionName lines
    node_line = f"NodeName={hostname} State=UNKNOWN CPUs={environ.get('SLURM_CPUS', cpus)} RealMemory={environ.get('SLURM_MEMORY', memory)}"
    partition_line = f"PartitionName={environ.get('SLURM_PARTITION_NAME', 'debug')} Default=YES Nodes={hostname} " \
        f"MaxTime=INFINITE State=UP Shared=YES DefMemPerCPU={environ.get('SLURM_MEMORY_PER_CPU', mem_per_cpu)}"

    with open(CONFIG_FILE_PATH, 'r') as file:
        lines = file.readlines()

    # Updated lines with replacements
    updated_lines = []
    for line in lines:
        stripped_line = line.strip()

        # Update lines based on key-value matching
        if stripped_line.startswith("NodeName="):
            updated_lines.append(node_line + "\n")
        elif stripped_line.startswith("PartitionName="):
            updated_lines.append(partition_line + "\n")
        else:
            # Update specific key-values based on template_params
            updated = False
            for key, value in template_params.items():
                if stripped_line.startswith(f"{key}="):
                    updated_lines.append(f"{key}={value}\n")
                    updated = True
                    break
            if not updated:
                # Keep the line as-is if no match
                updated_lines.append(line)

    with open(CONFIG_FILE_PATH, 'w') as file:
        file.writelines(updated_lines)

if __name__ == "__main__":
    main()
