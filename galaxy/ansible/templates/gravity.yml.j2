# Configuration for Gravity process manager.
gravity:

  # Process manager to use.
  # ``supervisor`` is the default process manager when Gravity is invoked as a non-root user.
  # ``systemd`` is the default when Gravity is invoked as root.
  # Valid options are: supervisor, systemd
  process_manager: {{ gravity_process_manager }}

  # What command to write to the process manager configs
  # `gravity` (`galaxyctl exec <service-name>`) is the default
  # `direct` (each service's actual command) is also supported.
  # Valid options are: gravity, direct
  # service_command_style: gravity

  # Use the process manager's *service instance* functionality for services that can run multiple instances.
  # Presently this includes services like gunicorn and Galaxy dynamic job handlers. Service instances are only supported if
  # ``service_command_style`` is ``gravity``, and so this option is automatically set to ``false`` if
  # ``service_command_style`` is set to ``direct``.
  # use_service_instances: true

  # umask under which services should be executed. Setting ``umask`` on an individual service overrides this value.
  # umask: '022'

  # Memory limit (in GB), processes exceeding the limit will be killed. Default is no limit. If set, this is default value
  # for all services. Setting ``memory_limit`` on an individual service overrides this value. Ignored if ``process_manager``
  # is ``supervisor``.
  # memory_limit:

  # Specify Galaxy config file (galaxy.yml), if the Gravity config is separate from the Galaxy config. Assumed to be the
  # same file as the Gravity config if a ``galaxy`` key exists at the root level, otherwise, this option is required.
  galaxy_config_file: {{ galaxy_config_file }}

  # Specify Galaxy's root directory.
  # Gravity will attempt to find the root directory, but you can set the directory explicitly with this option.
  galaxy_root: {{ galaxy_server_dir }}

  # User to run Galaxy as, required when using the systemd process manager as root.
  # Ignored if ``process_manager`` is ``supervisor`` or user-mode (non-root) ``systemd``.
  galaxy_user: {{ galaxy_user_name }}

  # Group to run Galaxy as, optional when using the systemd process manager as root.
  # Ignored if ``process_manager`` is ``supervisor`` or user-mode (non-root) ``systemd``.
  # galaxy_group:

  # Set to a directory that should contain log files for the processes controlled by Gravity.
  # If not specified defaults to ``<galaxy_data_dir>/gravity/log``.
  log_dir: {{ galaxy_logs_dir }}

  # Set to Galaxy's virtualenv directory.
  # If not specified, Gravity assumes all processes are on PATH. This option is required in most circumstances when using
  # the ``systemd`` process manager.
  virtualenv: {{ galaxy_venv_dir }}

  # Select the application server.
  # ``gunicorn`` is the default application server.
  # ``unicornherder`` is a production-oriented manager for (G)unicorn servers that automates zero-downtime Galaxy server restarts,
  # similar to uWSGI Zerg Mode used in the past.
  # Valid options are: gunicorn, unicornherder
  # app_server: gunicorn

  # Override the default instance name.
  # this is hidden from you when running a single instance.
  # instance_name: _default_

  # Configuration for Gunicorn. Can be a list to run multiple gunicorns for rolling restarts.
  gunicorn:

    # Enable Galaxy gunicorn server.
    enable: {{ galaxy_gunicorn }}

    # The socket to bind. A string of the form: ``HOST``, ``HOST:PORT``, ``unix:PATH``, ``fd://FD``. An IP is a valid HOST.
    bind: "127.0.0.1:{{ gunicorn_port }}"

    # Controls the number of Galaxy application processes Gunicorn will spawn.
    # Increased web performance can be attained by increasing this value.
    # If Gunicorn is the only application on the server, a good starting value is the number of CPUs * 2 + 1.
    # 4-12 workers should be able to handle hundreds if not thousands of requests per second.
    workers: {{ gunicorn_workers }}

    # Gunicorn workers silent for more than this many seconds are killed and restarted.
    # Value is a positive number or 0. Setting it to 0 has the effect of infinite timeouts by disabling timeouts for all workers entirely.
    # If you disable the ``preload`` option workers need to have finished booting within the timeout.
    # timeout: 300

    # Extra arguments to pass to Gunicorn command line.
    # extra_args:

    # Use Gunicorn's --preload option to fork workers after loading the Galaxy Application.
    # Consumes less memory when multiple processes are configured. Default is ``false`` if using unicornherder, else ``true``.
    # preload:

    # umask under which service should be executed
    # umask:

    # Value of supervisor startsecs, systemd TimeoutStartSec
    # start_timeout: 15

    # Value of supervisor stopwaitsecs, systemd TimeoutStopSec
    # stop_timeout: 65

    # Amount of time to wait for a server to become alive when performing rolling restarts.
    # restart_timeout: 300

    # Memory limit (in GB). If the service exceeds the limit, it will be killed. Default is no limit or the value of the
    # ``memory_limit`` setting at the top level of the Gravity configuration, if set. Ignored if ``process_manager`` is
    # ``supervisor``.
    # memory_limit:

    # Extra environment variables and their values to set when running the service. A dictionary where keys are the variable
    # names.
    # environment: {}

  # Configuration for Celery Processes.
  celery:

    # Enable Celery distributed task queue.
    enable: {{ galaxy_celery }}

    # Enable Celery Beat periodic task runner.
    enable_beat: {{ galaxy_celery_beat }}

    # Number of Celery Workers to start.
    concurrency: {{ celery_workers }}

    # Log Level to use for Celery Worker.
    # Valid options are: DEBUG, INFO, WARNING, ERROR
    # loglevel: DEBUG

    # Queues to join
    # queues: celery,galaxy.internal,galaxy.external

    # Pool implementation
    # Valid options are: prefork, eventlet, gevent, solo, processes, threads
    # pool: threads

    # Extra arguments to pass to Celery command line.
    # extra_args:

    # umask under which service should be executed
    # umask:

    # Value of supervisor startsecs, systemd TimeoutStartSec
    # start_timeout: 10

    # Value of supervisor stopwaitsecs, systemd TimeoutStopSec
    # stop_timeout: 10

    # Memory limit (in GB). If the service exceeds the limit, it will be killed. Default is no limit or the value of the
    # ``memory_limit`` setting at the top level of the Gravity configuration, if set. Ignored if ``process_manager`` is
    # ``supervisor``.
    # memory_limit:

    # Extra environment variables and their values to set when running the service. A dictionary where keys are the variable
    # names.
    # environment: {}

  # Configuration for gx-it-proxy.
  gx_it_proxy:

    # Set to true to start gx-it-proxy
    enable: {{ galaxy_gx_it_proxy }}

    # gx-it-proxy version
    version: '{{ gx_it_proxy_version }}'

    # Public-facing IP of the proxy
    ip: 127.0.0.1

    # Public-facing port of the proxy
    port: {{ gx_it_proxy_port }}

    # Routes file to monitor.
    # Should be set to the same path as ``interactivetools_map`` in the ``galaxy:`` section. This is ignored if
    # ``interactivetools_map is set``.
    sessions: {{ gx_it_proxy_sessions_path }}

    # Include verbose messages in gx-it-proxy
    # verbose: true

    # Forward all requests to IP.
    # This is an advanced option that is only needed when proxying to remote interactive tool container that cannot be reached through the local network.
    # forward_ip:

    # Forward all requests to port.
    # This is an advanced option that is only needed when proxying to remote interactive tool container that cannot be reached through the local network.
    # forward_port:

    # Rewrite location blocks with proxy port.
    # This is an advanced option that is only needed when proxying to remote interactive tool container that cannot be reached through the local network.
    # reverse_proxy: false

    # umask under which service should be executed
    # umask:

    # Value of supervisor startsecs, systemd TimeoutStartSec
    # start_timeout: 10

    # Value of supervisor stopwaitsecs, systemd TimeoutStopSec
    # stop_timeout: 10

    # Memory limit (in GB). If the service exceeds the limit, it will be killed. Default is no limit or the value of the
    # ``memory_limit`` setting at the top level of the Gravity configuration, if set. Ignored if ``process_manager`` is
    # ``supervisor``.
    # memory_limit:

    # Extra environment variables and their values to set when running the service. A dictionary where keys are the variable
    # names.
    # environment: {}

  # Configuration for tusd server (https://github.com/tus/tusd).
  # The ``tusd`` binary must be installed manually and made available on PATH (e.g in galaxy's .venv/bin directory).
  tusd:

    # Enable tusd server.
    # If enabled, you also need to set up your proxy as outlined in https://docs.galaxyproject.org/en/latest/admin/nginx.html#receiving-files-via-the-tus-protocol.
    enable: {{ galaxy_tusd }}

    # Path to tusd binary
    tusd_path: {{ tusd_path }}

    # Host to bind the tusd server to
    host: 127.0.0.1

    # Port to bind the tusd server to
    port: {{ tusd_port }}

    # Directory to store uploads in.
    # Must match ``tus_upload_store`` setting in ``galaxy:`` section.
    upload_dir: {{ tus_upload_store_path }}

    # Value of tusd -hooks-httpd option
    #
    # the default of is suitable for using tusd for Galaxy uploads and should not be changed unless you are using tusd for
    # other purposes such as Pulsar staging.
    #
    # The value of galaxy_infrastructure_url is automatically prepended if the option starts with a `/`
    # hooks_http: /api/upload/hooks

    # Comma-separated string of enabled tusd hooks.
    #
    # Leave at the default value to require authorization at upload creation time.
    # This means Galaxy's web process does not need to be running after creating the initial
    # upload request.
    #
    # Set to empty string to disable all authorization. This means data can be uploaded (but not processed)
    # without the Galaxy web process being available.
    #
    # You can find a list of available hooks at https://github.com/tus/tusd/blob/master/docs/hooks.md#list-of-available-hooks.
    # hooks_enabled_events: pre-create

    # Extra arguments to pass to tusd command line.
    extra_args: -behind-proxy -base-path {{ tusd_base_path }}

    # umask under which service should be executed
    # umask:

    # Value of supervisor startsecs, systemd TimeoutStartSec
    # start_timeout: 10

    # Value of supervisor stopwaitsecs, systemd TimeoutStopSec
    # stop_timeout: 10

    # Memory limit (in GB). If the service exceeds the limit, it will be killed. Default is no limit or the value of the
    # ``memory_limit`` setting at the top level of the Gravity configuration, if set. Ignored if ``process_manager`` is
    # ``supervisor``.
    # memory_limit:

    # Extra environment variables and their values to set when running the service. A dictionary where keys are the variable
    # names.
    # environment: {}

  # Configuration for Galaxy Reports.
  reports:

    # Enable Galaxy Reports server.
    enable: {{ galaxy_reports }}
    # Path to reports.yml, relative to galaxy.yml if not absolute
    config_file: {{ galaxy_reports_config_file }}

    # The socket to bind. A string of the form: ``HOST``, ``HOST:PORT``, ``unix:PATH``, ``fd://FD``. An IP is a valid HOST.
    bind: "127.0.0.1:{{ galaxy_reports_port }}"

    # Controls the number of Galaxy Reports application processes Gunicorn will spawn.
    # It is not generally necessary to increase this for the low-traffic Reports server.
    # workers: 1

    # Gunicorn workers silent for more than this many seconds are killed and restarted.
    # Value is a positive number or 0. Setting it to 0 has the effect of infinite timeouts by disabling timeouts for all workers entirely.
    # timeout: 300

    # URL prefix to serve from.
    # The corresponding nginx configuration is (replace <url_prefix> and <bind> with the values from these options):
    #
    # location /<url_prefix>/ {
    #     proxy_pass http://<bind>/;
    # }
    #
    # If <bind> is a unix socket, you will need a ``:`` after the socket path but before the trailing slash like so:
    #     proxy_pass http://unix:/run/reports.sock:/;
    url_prefix: {{ galaxy_reports_url_prefix }}

    # Extra arguments to pass to Gunicorn command line.
    # extra_args:

    # umask under which service should be executed
    # umask:

    # Value of supervisor startsecs, systemd TimeoutStartSec
    # start_timeout: 10

    # Value of supervisor stopwaitsecs, systemd TimeoutStopSec
    # stop_timeout: 10

    # Memory limit (in GB). If the service exceeds the limit, it will be killed. Default is no limit or the value of the
    # ``memory_limit`` setting at the top level of the Gravity configuration, if set. Ignored if ``process_manager`` is
    # ``supervisor``.
    # memory_limit:

    # Extra environment variables and their values to set when running the service. A dictionary where keys are the variable
    # names.
    # environment: {}

  # Configure dynamic handlers in this section.
  # See https://docs.galaxyproject.org/en/latest/admin/scaling.html#dynamically-defined-handlers for details.
{% if not galaxy_dynamic_handlers %}
  handlers: {}
{% else %}
  handlers:
    handler:
      processes: {{ galaxy_handler_processes }}
      pools:
        - job-handlers
        - workflow-schedulers
{% endif %}
