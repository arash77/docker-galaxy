- hosts: localhost
  connection: local
  remote_user: root
  vars:
    nginx_conf_http:
      client_max_body_size: 50g
      proxy_buffers: 8 16k
      proxy_buffer_size: 16k
      underscores_in_headers: "on"
      keepalive_timeout: 600
      proxy_read_timeout: 300
      server_names_hash_bucket_size: 128
      # gzip: "on" # This is enabled by default in Ubuntu, and the duplicate directive will cause a crash.
      gzip_proxied: "any"
      gzip_static: "on"
      gzip_vary: "on"
      gzip_min_length: 128
      gzip_comp_level: 6
      gzip_types: |
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        application/xhtml+xml
        application/x-font-ttf
        application/x-font-opentype
        image/png
        image/svg+xml
        image/x-icon
    nginx_extra_configs:
      - galaxy_common.conf
      - interactive_tools_common.conf
      - reports_auth.conf
      - flower_auth.conf
      - delegated_uploads.conf
    nginx_servers:
      - galaxy_http
      - interactive_tools_http
  
  # this is required as we re-run this playbook during startup (while setting up ssl or proxy prefix)
  pre_tasks:
    - name: Ensure 'daemon off' is absent from nginx.conf
      lineinfile:
        path: '{{ nginx_conf_file }}'
        regexp: '^(\s*daemon\s+off\s*;)'
        state: absent

    - name: Ensure nginx sites-available and sites-enabled directories are empty and recreated
      file:
        state: "{{ item.state }}"
        path: "{{ nginx_conf_dir }}/{{ item.dir }}"
        owner: root
        group: root
        mode: '0755'
      with_items:
        - { dir: 'sites-available', state: 'absent' }
        - { dir: 'sites-available', state: 'directory' }
        - { dir: 'sites-enabled', state: 'absent' }
        - { dir: 'sites-enabled', state: 'directory' }
  
  roles:
    - role: galaxyproject.nginx

  tasks:
    - name: Ensure nginx is run by galaxy user
      lineinfile:
        path: '{{ nginx_conf_file }}'
        regexp: '^(\s*user\s+.*)'
        line: 'user {{ galaxy_user_name }};'
        state: present
  
    - name: Place htpasswd file
      template:
        src: "nginx/htpasswd.j2"
        dest: "{{ nginx_conf_dir }}/htpasswd"
        owner: "{{ galaxy_user_name }}"
        group: "{{ galaxy_user_name }}"
        mode: "0600"

  post_tasks:
    - name: Ensure 'daemon off' in nginx.conf as we use supervisor to manage nginx
      lineinfile:
        path: '{{ nginx_conf_file }}'
        regexp: '^(\s*daemon\s+.*)'
        line: 'daemon off;'
        state: present
    
    - name: Stop and disable nginx.
      service: name=nginx state=stopped enabled=no
